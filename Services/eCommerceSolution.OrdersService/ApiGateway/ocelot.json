{
  "GlobalConfiguration": {
    "BaseUrl": "https://localhost:4000"
  },
  "Routes": [

    //OrdersMicroservice Routes
    {
      "UpstreamPathTemplate": "/gateway/Orders/",
      "UpstreamHttpMethod": [ "Get", "Post", "Options" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Orders",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordersmicroservice.api",
          "Port": 8080
        }
        /*
         UpstreamPathTemplate is the path that the client will use to access the Gatewayservice.
         For example, if the client accesses https://localhost:4000/gateway/Orders, it will be routed to the Orders microservice.
         DownstreamPathTemplate is the path that the Gatewayservice will use to access the other microservices.
         In this case, it will route to the Orders microservice at http://ordersmicroservice.api:8080/api/Orders.
        */
      ],
      "FileCacheOptions": {
        "TtlSeconds": 30,
        "Region": "orders"
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/orderid/{orderID}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Orders/search/orderid/{orderID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordersmicroservice.api",
          "Port": 8080
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/productid/{productID}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Orders/search/productid/{productID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordersmicroservice.api",
          "Port": 8080
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/orderDate/{orderDate}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Orders/search/orderDate/{orderDate}",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordersmicroservice.api",
          "Port": 8080
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/search/userid/{userID}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Orders/search/userid/{userID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordersmicroservice.api",
          "Port": 8080
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/Orders/{orderID}/",
      "UpstreamHttpMethod": [ "Put", "Delete", "Options" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Orders/{orderID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordersmicroservice.api",
          "Port": 8080
        }
      ]
    },

    //ProductsMicroservice Routes
    {
      "UpstreamPathTemplate": "/gateway/products/",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Options" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/products",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10000,
        "TimeoutValue": 5000
      },
      "RetryOptions": {
        "RetryCount": 3,
        "RetryOnServerError": true
      },
      "RateLimitOptions": {
        "ClientWhitelist": [ "client1", "client2" ],
        "ClientIdHeader": "Client-Id",
        "PeriodTimespan": 30,
        "EnableRateLimiting": true,
        "Limit": 3,
        "Period": "1m",
        "HttpStatusCode": 429
      }
    },
    {
      "UpstreamPathTemplate": "/gateway/products/search/product-id/{productID}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/products/search/product-id/{productID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/products/search/{SearchString}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/products/search/{SearchString}",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/products/{ProductID}/",
      "UpstreamHttpMethod": [ "Delete", "Options" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/products/{ProductID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-microservice",
          "Port": 8080
        }
      ]
    },

    //UsersMicroservice Routes
    {
      "UpstreamPathTemplate": "/gateway/Auth/register/",
      "UpstreamHttpMethod": [ "Post", "Options" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Auth/register",
      "DownstreamHostAndPorts": [
        {
          "Host": "users-microservice",
          "Port": 9090
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/Auth/login/",
      "UpstreamHttpMethod": [ "Post", "Options" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Auth/login",
      "DownstreamHostAndPorts": [
        {
          "Host": "users-microservice",
          "Port": 9090
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/gateway/Users/{userID}/",
      "UpstreamHttpMethod": [ "Get" ],
      "UpstreamScheme": "http",
      "DownstreamPathTemplate": "/api/Users/{userID}",
      "DownstreamHostAndPorts": [
        {
          "Host": "users-microservice",
          "Port": 9090
        }
      ]
    }


  ]
}
